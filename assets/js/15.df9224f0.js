(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{397:function(s,a,t){"use strict";t.r(a);var e=t(12),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("在浏览其他博主的博客时偶然发了这个监控工具，觉得还是很有用和好玩的，于是顺手搭建了一个，简单记录一下。")]),s._v(" "),a("p",[s._v("这是一个开源项目，代码在"),a("a",{attrs:{href:"https://github.com/louislam/uptime-kuma",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),a("OutboundLink")],1),s._v('上，有比较全面的英文文档，搭建起来很容易，官网上对它是这样描述的：It is a self-hosted monitoring tool like "Uptime Robot".（不知道Uptime Robot是啥，查了一下就是个监控工具，和Uptime Kuma最大的区别就是Uptime Kuma可以self-hosted 自托管）')]),s._v(" "),a("h2",{attrs:{id:"部署运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署运行"}},[s._v("#")]),s._v(" 部署运行")]),s._v(" "),a("p",[s._v("Uptime Kuma支持docker部署，我采用的docker-compose的方式，编辑完yml文件直接启动就可以了。")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker-compose.yml")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("uptime-kuma")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" louislam/uptime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("kuma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" uptime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("kuma\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./uptime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("kuma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/app/data\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /var/run/docker.sock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/run/docker.sock "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射Docker宿主")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 3001"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3001")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <Host Port>:<Container Port>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("直接访问配置的端口号，打开后就可以使用了。官方预览图如下:")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://alist.worthy.cc/d/local/images/2023/68747470733a2f2f757074696d652e6b756d612e7065742f696d672f6c696768742e6a7067.jpeg",alt:"img"}})]),s._v(" "),a("h2",{attrs:{id:"监控docker容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控docker容器"}},[s._v("#")]),s._v(" 监控Docker容器")]),s._v(" "),a("p",[s._v("监控项中是可以监控Docker容器的，但是需要配置Docker 宿主，查阅文档后得知，By default, a docker container is self-contained, which means Uptime Kuma cannot access your host. You need to bind the "),a("code",[s._v("/var/run/docker.sock")]),s._v(" to your container. 将"),a("code",[s._v("docker.sock")]),s._v(" 绑定到的容器有两种方法，一种Share "),a("code",[s._v("docker.sock")]),s._v(" with Uptime Kuma Container也是就与Uptime Kuma Container共享"),a("code",[s._v("docker.sock")]),s._v("，所需要的操作就是在docker启动命令上，或docker-compose.yml加上参数。另一种是TCP - Bridge Mode，TCP桥接模式，需要在TCP 端口上公开 Docker 守护进程，有些麻烦，采用第一种方法，需要添加的参数如下：")]),s._v(" "),a("p",[s._v("Command argument:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /var/run/docker.sock:/var/run/docker.sock\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("docker-compose:")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /var/run/docker.sock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/run/docker.sock\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("docker宿主配置完成后，就可以通过容器名称 / ID来监控Docker容器了。")]),s._v(" "),a("h2",{attrs:{id:"反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[s._v("#")]),s._v(" 反向代理")]),s._v(" "),a("p",[s._v("通过IP端口访问不方便，配置个域名，使用nginx反向代理一下，即可实现域名访问。反向代理配置如下：")]),s._v(" "),a("p",[s._v("With SSL:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n  listen 443 ssl http2;\n  # Remove '#' in the next line to enable IPv6\n  # listen [::]:443 ssl http2;\n  server_name sub.domain.com;\n  ssl_certificate     /path/to/ssl/cert/crt;\n  ssl_certificate_key /path/to/ssl/key/key;\n\n  location / {\n    proxy_set_header   X-Real-IP $remote_addr;\n    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header   Host $host;\n    proxy_pass         http://localhost:3001/;\n    proxy_http_version 1.1;\n    proxy_set_header   Upgrade $http_upgrade;\n    proxy_set_header   Connection \"upgrade\";\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("Without SSL:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server  {\n    listen 80;\n    # Remove '#' in the next line to enable IPv6\n    # listen [::]:80;\n    server_name    sub.domain.com;\n    location / {\n        proxy_pass         http://localhost:3001;\n        proxy_http_version 1.1;\n        proxy_set_header   Upgrade $http_upgrade;\n        proxy_set_header   Connection \"upgrade\";\n        proxy_set_header   Host $host;\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);